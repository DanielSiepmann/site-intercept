# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.forgeClient.forgeEndpoint: 'https://forge.typo3.org'
    app.coreGitSplit.monoRepo: 'git@github.com:TYPO3/TYPO3.CMS.git'
    app.coreGitSplit.singleRepoBase: 'git@github.com:TYPO3-CMS/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

        bind:
            # Absolute path to local directory where github core pull request files are put
            $pullRequestPatchPath: '%kernel.project_dir%/var/patches/'
            $rabbitSplitQueue: '%env(RABBITMQ_SPLIT_QUEUE)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Client\BambooClient: '@eight_points_guzzle.client.bamboo'
    App\Client\GerritClient: '@eight_points_guzzle.client.gerrit'
    App\Client\GeneralClient: '@eight_points_guzzle.client.general'
    App\Client\ForgeClient:
        class: App\Client\ForgeClient
        arguments: [ '%app.forgeClient.forgeEndpoint%', '%env(FORGE_ACCESS_TOKEN)%' ]

    App\Service\LocalCoreGitService:
        class: App\Service\LocalCoreGitService
        arguments:
            $logger: '@monolog.logger.request'
            $listener: '@App\GitWrapper\Event\GitOutputListener'
            $pullRequestCorePath: '%kernel.project_dir%/var/git-core-pr/'

    App\Service\CoreSplitService:
        class: App\Service\CoreSplitService
        public: true
        arguments:
            $logger: '@monolog.logger.request'
            $splitCorePath: '%kernel.project_dir%/var/git-core-split/'
            $splitMonoRepo: '%app.coreGitSplit.monoRepo%'
            $splitSingleRepoBase: '%app.coreGitSplit.singleRepoBase%'
            $gitOutputListener: '@App\GitWrapper\Event\GitOutputListener'

    PhpAmqpLib\Connection\AMQPStreamConnection:
        class: PhpAmqpLib\Connection\AMQPStreamConnection
        arguments:
            $host: '%env(RABBITMQ_HOST)%'
            $port: '%env(RABBITMQ_PORT)%'
            $user: '%env(RABBITMQ_USER)%'
            $password: '%env(RABBITMQ_PASSWORD)%'

    # graylog log setup and enrichment of log rows with static
    # data for easy search on elk.typo3.com. Works on dev / local too since
    # errors are ignored when sending.
    gelf.publisher:
        class: Gelf\Publisher
        arguments: ['@gelf.ignore_error_transport']
    gelf.ignore_error_transport:
        class: Gelf\Transport\IgnoreErrorTransportWrapper
        arguments: ['@gelf.transport']
    gelf.transport:
        class: Gelf\Transport\UdpTransport
        arguments: ['%env(GRAYLOG_HOST)%', '%env(int:GRAYLOG_PORT)%']
